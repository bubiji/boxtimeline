{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["host","doQuery","query","fetchJSON","body","question","method","doSave","item","field","value","Field","onClick","cls","length","rvalue","className","href","target","rel","indexOf","v","C","Result","query_type","answer","msg","handleClick","q","out","push","Triples","subj","onChange","key","App","useState","setQuery","result","setResult","fetchData","mq","a","data","type","evt","onKeyDown","keyCode","setField","setValue","canSave","handleSave","ret","alert","message","placeholder","disabled","ChatLeft","children","ChatRight","Chat","setTimeout","document","querySelector","scrollIntoView","map","l","Import","columns","setColumns","source","setSource","setSubj","JSON","stringify","onDrop","useCallback","acceptedFiles","file","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","wb","window","XLSX","read","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","columns_length","i","j","readAsArrayBuffer","useDropzone","getRootProps","getInputProps","isDragActive","column","title","row","focus","rows","getRowKey","id","col","Export","Object","keys","useEffect","isColumnsResizable","ll","aoa_to_sheet","book_new","book_append_sheet","writeFile","AppRouter","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f8f54855.chunk.js","sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport {useDropzone} from 'react-dropzone';\n\nimport { Grid, Input } from 'react-spreadsheet-grid'\n\nimport './App.css';\n\nimport fetchJSON from 'higher-order-helper/fetchJSON';\n\n// const host = 'http://127.0.0.1:8000'\nconst host = ''\n\nfunction doQuery(query) {\n  return fetchJSON(host + '/api/search', {body: {question: query}, method: 'POST'})\n}\n\nfunction doSave(item, field, value, method='POST') {\n  return fetchJSON(host + '/api/triples', {body: {item, field, value}, method});\n}\n\nfunction doImport(data) {\n  return fetchJSON(host + '/api/import_triples/', {body: JSON.stringify(data), method: 'POST'});\n}\n\nfunction doExport(data) {\n  return fetchJSON(host + '/api/export_triples/');\n}\n\nfunction C(v) {\n  switch(v) {\n    case 'subj':\n      return '项目名称';\n    case 'repo':\n      return '仓库地址';\n    case 'language':\n      return '语言';\n    case 'default_branch':\n      return '默认分支';\n    case 'tag_name':\n      return '标签';\n    case 'download_url':\n      return '下载地址';\n    case 'main_language':\n      return '主要语言';\n    case 'code':\n      return '代码行数';\n    default:\n      return v;\n  }\n}\n\nfunction Field({field, value, onClick}) {\n  const handleClick = () => {\n    if (onClick) {\n      onClick(`${field}:${value}`);\n    }\n  }\n\n  let cls = 'value' + (value.length > 10 ? ' small' : '');\n  let rvalue = '';\n  if (field === 'homepage' || field === 'download_url' || field === 'repo') {\n    rvalue = <a className={cls} href={value} target='_blank' rel=\"noopener noreferrer\"> {value} </a>;\n  } else if (value.indexOf(' ') > -1 || field === 'code' || field === 'spec_code') {\n    rvalue = <span className={cls}> {value} </span>\n  } else {\n    cls += ' pointer'\n    rvalue = <span className={cls} onClick={handleClick}> {value} </span>\n  }\n\n  return (\n    <li>\n      <span className='field'> {C(field)}: </span>\n      {rvalue}\n    </li>\n\n  )\n}\n\nfunction Result({query_type, answer, msg, onClick}) {\n  const handleClick = (q) => () => {\n    if (onClick) {\n      onClick(q);\n    }\n  }\n  if (query_type === -1) {\n    return <p> {msg} </p>\n  }\n  if (query_type === 4) {\n    return <p> {answer} </p>\n  }\n  if (query_type === 1) {\n    const out = [];\n    for (const item in answer) {\n      out.push(<Field field={item} value={answer[item]} onClick={onClick} />)\n    }\n\n    return (\n      <ul className='subj_attrs'>\n        <li className='add_triples'> <Triples item={answer.subj} onChange={onClick} /> </li>\n        {out}\n      </ul>\n\n    )\n  }\n  if (query_type === 5) {\n    const out = [];\n    for (const item of answer) {\n      out.push(<li key={item[0]} onClick={handleClick(item[1])}> <span> {item[1]} </span> </li>)\n    }\n\n    return <ul className='subj'> {out} </ul>\n  }\n  return <p></p>\n}\n\nfunction App() {\n  const [query, setQuery] = useState('goconvey');\n  const [result, setResult] = useState({});\n\n  const fetchData = async (mq) => {\n    if (mq) {\n      setQuery(mq);\n    } else {\n      mq = query;\n    }\n    if (!mq) {\n      return;\n    }\n    const data = await doQuery(mq)\n    setResult(data);\n  }\n\n  function trySearch(evt) {\n    if (evt && evt.keyCode === 13) {\n      fetchData()\n    }\n  }\n\n  return (\n    <div className=\"App-main\">\n      <input className=\"search\" type=\"text\" value={query}\n          onChange={(evt) => {setQuery(evt.target.value)}}\n          onKeyDown={trySearch} />\n      <Result {...result} onClick={fetchData} />\n    </div>\n  );\n}\n\nfunction Triples({item, onChange}) {\n  const [field, setField] = useState('');\n  const [value, setValue] = useState('');\n  function canSave() {\n    if (!item) {\n      return false;\n    }\n    if (!field) {\n      return false;\n    }\n    if (!value) {\n      return false;\n    }\n    return true;\n  }\n  function handleSave(method) {\n    return async () => {\n      if (!canSave()) {\n        return;\n      }\n\n      try {\n        const ret = await doSave(item, field, value, method);\n        alert(ret);\n        onChange()\n      } catch (e) {\n        alert(e.message);\n      }\n    }\n  }\n  return (\n    <div className=\"triples\">\n      <input type=\"text\" placeholder=\"field\"\n          onChange={(evt) => {setField(evt.target.value)}}\n          value={field}\n        />\n      <input type=\"text\" placeholder=\"value\"\n          onChange={(evt) => {setValue(evt.target.value)}}\n          value={value}\n        />\n\n      <button onClick={handleSave('POST')} disabled={!canSave()}> 保存 </button>\n      <button onClick={handleSave('DELETE')} disabled={!canSave()} className=\"delete\"> 删除 </button>\n    </div>\n  );\n}\n\nfunction ChatLeft({children}) {\n  return (\n    <div className=\"chat-line chat-line-left\">\n      <div className=\"chat-left\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction ChatRight({children}) {\n  return (\n    <div className=\"chat-line chat-line-right\">\n      <div className=\"chat-right\">\n        {children}\n      </div>\n    </div>\n  );\n}\n\nfunction Chat() {\n  const [query, setQuery] = useState('goconvey');\n  const [result, setResult] = useState([]);\n\n  const fetchData = async (mq) => {\n    if (mq) {\n      setQuery(mq);\n    } else {\n      mq = query;\n    }\n    if (!mq) {\n      return;\n    }\n    setResult((result) => [...result, {q: mq}]);\n    const data = await doQuery(mq)\n    setResult((result) => [...result, {a: data}]);\n    setQuery('');\n    setTimeout(() => {\n      document.querySelector('.view').scrollIntoView();\n    }, 100)\n  }\n\n  function trySearch(evt) {\n    if (evt && evt.keyCode === 13) {\n      fetchData()\n    }\n  }\n\n  return (\n    <div className=\"App-main\">\n      <div className=\"chat\">\n        {result.map((l) => {\n          if (l.q) {\n            return (\n              <ChatLeft> {l.q} </ChatLeft>\n            );\n          } else {\n            return (\n              <ChatRight>\n                <Result {...l.a} />\n              </ChatRight>\n            )\n          }\n        })}\n        <div className=\"view\"> </div>\n      </div>\n      <input className=\"search\" type=\"text\" value={query}\n          onChange={(evt) => {setQuery(evt.target.value)}}\n          onKeyDown={trySearch} />\n    </div>\n  );\n}\n\nfunction Import() {\n  const [columns, setColumns] = useState([]);\n  const [source, setSource] = useState([]);\n  const [subj, setSubj] = useState('subj');\n\n  async function handleImport() {\n      try {\n        const ret = await doImport({subj, source});\n        alert(ret);\n      } catch (e) {\n        alert(e.message);\n      }\n  }\n\n  const onDrop = useCallback(acceptedFiles => {\n    /* Boilerplate to set up FileReader */\n    if (acceptedFiles.length === 0) {\n      return;\n    }\n    const file = acceptedFiles[0];\n\t\tconst reader = new FileReader();\n\t\tconst rABS = !!reader.readAsBinaryString;\n\t\treader.onload = (e) => {\n\t\t\t/* Parse data */\n\t\t\tconst bstr = e.target.result;\n\t\t\tconst wb = window.XLSX.read(bstr, {type:rABS ? 'binary' : 'array'});\n\t\t\t/* Get first worksheet */\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t/* Convert array of arrays */\n\t\t\tconst data = window.XLSX.utils.sheet_to_json(ws, {header:1});\n      const columns = data[0];\n      const columns_length = columns.length;\n      const length = data.length;\n      let out = [];\n      for (let i = 1; i < length; i ++) {\n        const l = {};\n        for (let j = 0; j < columns_length; j ++) {\n          l[columns[j]] = data[i][j];\n        }\n        l['id'] = i\n        out.push(l);\n      }\n      setColumns(columns);\n      setSource(out);\n\t\t};\n\t\tif(rABS) reader.readAsBinaryString(file); else reader.readAsArrayBuffer(file);\n  }, []);\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop});\n  return (\n    <div className=\"App-main\">\n      <div className=\"upload\" {...getRootProps()}>\n        <input {...getInputProps()} />\n        {\n          isDragActive ?\n            <p>Drop the files here ...</p> :\n            <p>Drag 'n' drop some files here, or click to select files</p>\n        }\n      </div>\n      {source.length > 0 &&\n        <div className=\"preview import\">\n          <Grid\n            columns={columns.map((column) => {\n              return {\n                title: () => column,\n                value: (row, { focus }) => {\n                    return (\n                        <Input\n                          value={row[column]}\n                          focus={focus}\n                        />\n                    );\n                }\n              }\n            })}\n\n            rows={source}\n            getRowKey={row => row.id}\n          />\n          <div className=\"import-btn\">\n            <select onChange={({target}) => {setSubj(target.value)}} value={subj}>\n              <option value=\"\">请选择实体字段</option>\n              {columns.map((col) =>\n                <option key={col} value={col}> {col} </option>)}\n            </select> &nbsp;\n            <button onClick={handleImport}> 导入 </button>\n          </div>\n      </div>}\n    </div>\n  );\n}\n\nfunction Export() {\n  const [columns, setColumns] = useState([]);\n  const [source, setSource] = useState([]);\n\n  async function fetchData() {\n    const data = await doExport()\n    setSource(data);\n    if (data.length > 0) {\n      setColumns(Object.keys(data[0]))\n    }\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, [])\n\n  function handleExport() {\n    let data = [columns];\n    for (const l of source) {\n      let ll = [];\n      for (const col of columns) {\n        ll.push(l[col]);\n      }\n      data.push(ll)\n    }\n\t\t/* convert state to workbook */\n\t\tconst ws = window.XLSX.utils.aoa_to_sheet(data);\n\t\tconst wb = window.XLSX.utils.book_new();\n\t\twindow.XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\n\t\t/* generate XLSX file and send to client */\n\t\twindow.XLSX.writeFile(wb, \"sheetjs.xlsx\")\n  }\n\n  return (\n    <div className=\"App-main\">\n      {source.length > 0 &&\n        <div className=\"preview\">\n          <Grid key=\"grid\"\n            columns={columns.map((column) => {\n              return {\n                title: () => column,\n                value: (row, { focus }) => {\n                    return (\n                      <Input\n                        value={row[column]}\n                        focus={focus}\n                      />\n                    );\n                }\n              }\n            })}\n\n            rows={source}\n            getRowKey={row => row.subj}\n            isColumnsResizable\n          />\n          <div className=\"import-btn\" key=\"button\">\n            <button onClick={handleExport}> 导出 </button>\n          </div>\n      </div>}\n    </div>\n  );\n}\n\nfunction AppRouter() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route path=\"/\" exact component={App} />\n        <Route path=\"/chat\" exact component={Chat} />\n        <Route path=\"/import\" exact component={Import} />\n        <Route path=\"/export\" exact component={Export} />\n      </div>\n    </Router>\n  );\n}\n\nexport default AppRouter;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}